@startuml
skinparam classAttributeIconSize 0
top to bottom direction

' ====== Enums (show first, like a header) ======
package "Enums" {
  enum Course {
    SCY
    SCM
    LCM
  }
  enum CourseUnit {
    YARDS
    METERS
  }
  enum StrokeType {
    FREESTYLE
    BACKSTROKE
    BREASTSTROKE
    BUTTERFLY
    INDIVIDUAL_MEDLEY
    FREE_KICK
    DRILL
  }
  enum Effort {
    EASY        ' recovery, technique
    ENDURANCE   ' aerobic steady
    THRESHOLD   ' lactate threshold
    RACE_PACE   ' target event pace
    VO2_MAX     ' high aerobic power work
    SPRINT      ' max effort, pure speed
  }
}

' ====== Core domain classes ======
package "Core Classes" {

class Swimmer {
  - id: UUID
  - name: String
  - seedPaces: Map<StrokeType, SeedPace100>
  --
  + Swimmer()
  + Swimmer(id: UUID, name: String)
  + getId(): UUID
  + setId(id: UUID): void
  + getName(): String
  + setName(name: String): void
  + getSeedTime(stroke: StrokeType): SeedPace100
  + updateSeedTime(stroke: StrokeType, seedTime: double, unit: CourseUnit): void
  + getSeedPaces(): Map<StrokeType, SeedPace100>
  + setSeedPaces(map: Map<StrokeType, SeedPace100>): void
  + toString(): String
}

class SeedPace100 {
  - seedTimeSec: double
  - unit: CourseUnit
  - lastUpdated: java.util.Date
  --
  + SeedPace100()
  + SeedPace100(seedTimeSec: double, unit: CourseUnit, lastUpdated: java.util.Date)
  + getSeedTime(): double
  + setSeedTime(value: double): void
  + getUnit(): CourseUnit
  + setUnit(unit: CourseUnit): void
  + getLastUpdated(): java.util.Date
  + setLastUpdated(date: java.util.Date): void
  + toString(): String
}

class Workout {
  - id: UUID
  - name: String
  - course: Course
  - notes: String
  - timeBudgetSec: double
  - defaultRestBetweenGroupsSec: int
  - defaultRestBetweenSetsSec: int
  - groups: List<SetGroup>
  --
  + Workout()
  + Workout(id: UUID, name: String, course: Course)
  + getId(): UUID
  + setId(id: UUID): void
  + getName(): String
  + setName(name: String): void
  + getCourse(): Course
  + setCourse(course: Course): void
  + getNotes(): String
  + setNotes(notes: String): void
  + getTimeBudgetSec(): double
  + setTimeBudgetSec(seconds: double): void
  + getDefaultRestBetweenGroupsSec(): int
  + setDefaultRestBetweenGroupsSec(seconds: int): void
  + getDefaultRestBetweenSetsSec(): int
  + setDefaultRestBetweenSetsSec(seconds: int): void
  + getGroups(): List<SetGroup>
  + setGroups(groups: List<SetGroup>): void
  + addSetGroup(group: SetGroup): void
  + removeSetGroup(group: SetGroup): void
  + calculateTotalTime(): double
  + calculateSwimTime(): double
  + calculateRestTime(): double
  + calculateTotalDistance(): int
  + toString(): String
}

class SetGroup {
  - name: String
  - order: int
  - sets: List<SwimSet>
  - restAfterGroupSec: int
  --
  + SetGroup()
  + SetGroup(name: String, order: int)
  + getName(): String
  + setName(name: String): void
  + getOrder(): int
  + setOrder(order: int): void
  + getSets(): List<SwimSet>
  + setSets(sets: List<SwimSet>): void
  + getRestAfterGroupSec(): int
  + setRestAfterGroupSec(seconds: int): void
  + addSet(set: SwimSet): void
  + removeSet(set: SwimSet): void
  + calculateGroupSwimTime(): double
  + calculateGroupRestTime(): double
  + calculateGroupTotalTime(): double
  + calculateGroupDistance(): int
  + toString(): String
}

class SwimSet {
  - stroke: StrokeType
  - reps: int
  - distancePerRepMeters: int
  - effort: Effort
  - notes: String
  --
  + SwimSet()
  + SwimSet(stroke: StrokeType, reps: int, distancePerRepMeters: int, effort: Effort)
  + getStroke(): StrokeType
  + setStroke(stroke: StrokeType): void
  + getReps(): int
  + setReps(reps: int): void
  + getDistancePerRepMeters(): int
  + setDistancePerRepMeters(meters: int): void
  + getEffort(): Effort
  + setEffort(effort: Effort): void
  + getNotes(): String
  + setNotes(notes: String): void
  + calculateGoal(): double
  + calculateInterval(): double
  + calculateSetSwimTime(): double
  + calculateSetRestTime(): double
  + calculateSetDistance(): int
  + toString(): String
}

}

' ====== Associations (domain, not UI) ======
Swimmer "1" o-- "0..*" Workout
Swimmer "1" o-- "0..*" SeedPace100 : seedPaces (per stroke)
Workout "1" *-- "1..*" SetGroup
SetGroup "1" *-- "1..*" SwimSet

@enduml